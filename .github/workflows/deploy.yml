name: Build and Deploy

on:
  push:
    branches:
      - 'release/v1.0'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REMOTE_SERVER: ${{ secrets.REMOTE_SERVER }}
      REMOTE_USER: ${{ secrets.REMOTE_USER }}
      MD_DOCS_FOLDER: ${{ github.workspace }}/nightwatch-docs
      API_DOCS_FOLDER: ${{ github.workspace }}/nightwatch/lib/api
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout Nightwatch source code
        uses: actions/checkout@v2
        with:
          repository: nightwatchjs/nightwatch
          path: nightwatch

      - name: Checkout Nightwatch docs folder
        uses: actions/checkout@v2
        with:
          repository: nightwatchjs/nightwatch-docs
          ref: versions/3.0
          path: nightwatch-docs

      - name: Delete not needed files
        run: |
          rm ${{ github.workspace }}/nightwatch-docs/LICENSE.md
          rm ${{ github.workspace }}/nightwatch-docs/README.md

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Start server
        run: |
          nohup npm start > server.log 2>&1 &
          sleep 10          

      - name: Run Selenium script
        run: |
          echo "module.exports = {
            demoTest(browser) {
              browser.url('http://localhost:5173/api').pause(5000).url('http://127.0.0.1:5173/api/element/find.html');
            }
          };" > navigate.js
          npx nightwatch navigate.js -e chrome --headless --verbose

      - name: Show server output
        run: cat server.log

      - name: Build the website
        run: npm run build

      - name: List API_DOCS_FOLDER
        run: cd out/api && ls -la

      - name: Deploy to server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PROD_DEPLOY_SECRET }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ env.REMOTE_SERVER }} >> ~/.ssh/known_hosts
          rsync -azP --delete ./out/ ${{ env.REMOTE_USER }}@${{ env.REMOTE_SERVER }}:${{ secrets.REMOTE_DIRECTORY }}